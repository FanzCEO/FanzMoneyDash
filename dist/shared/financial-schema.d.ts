/**
 * FanzMoneyDashâ„¢ Financial Schema Extension
 * Extends existing FanzDash schema with comprehensive financial operations
 * Compatible with existing 77+ table architecture
 */
export declare const paymentProcessors: import("drizzle-orm/pg-core").PgTableWithColumns<{
    name: "payment_processors";
    schema: undefined;
    columns: {
        id: import("drizzle-orm/pg-core").PgColumn<{
            name: "id";
            tableName: "payment_processors";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        name: import("drizzle-orm/pg-core").PgColumn<{
            name: "name";
            tableName: "payment_processors";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        displayName: import("drizzle-orm/pg-core").PgColumn<{
            name: "display_name";
            tableName: "payment_processors";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        processorType: import("drizzle-orm/pg-core").PgColumn<{
            name: "processor_type";
            tableName: "payment_processors";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        rails: import("drizzle-orm/pg-core").PgColumn<{
            name: "rails";
            tableName: "payment_processors";
            dataType: "json";
            columnType: "PgJson";
            data: string[];
            driverParam: unknown;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        regionTags: import("drizzle-orm/pg-core").PgColumn<{
            name: "region_tags";
            tableName: "payment_processors";
            dataType: "json";
            columnType: "PgJson";
            data: string[];
            driverParam: unknown;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        currencies: import("drizzle-orm/pg-core").PgColumn<{
            name: "currencies";
            tableName: "payment_processors";
            dataType: "json";
            columnType: "PgJson";
            data: string[];
            driverParam: unknown;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        status: import("drizzle-orm/pg-core").PgColumn<{
            name: "status";
            tableName: "payment_processors";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        apiEndpoint: import("drizzle-orm/pg-core").PgColumn<{
            name: "api_endpoint";
            tableName: "payment_processors";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        webhookEndpoint: import("drizzle-orm/pg-core").PgColumn<{
            name: "webhook_endpoint";
            tableName: "payment_processors";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        configuration: import("drizzle-orm/pg-core").PgColumn<{
            name: "configuration";
            tableName: "payment_processors";
            dataType: "json";
            columnType: "PgJson";
            data: Record<string, any>;
            driverParam: unknown;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        fees: import("drizzle-orm/pg-core").PgColumn<{
            name: "fees";
            tableName: "payment_processors";
            dataType: "json";
            columnType: "PgJson";
            data: {
                cardRate?: number;
                fixedFee?: number;
                currency?: string;
                chargebackFee?: number;
            };
            driverParam: unknown;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        limits: import("drizzle-orm/pg-core").PgColumn<{
            name: "limits";
            tableName: "payment_processors";
            dataType: "json";
            columnType: "PgJson";
            data: {
                minAmount?: number;
                maxAmount?: number;
                dailyLimit?: number;
                monthlyLimit?: number;
            };
            driverParam: unknown;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        complianceInfo: import("drizzle-orm/pg-core").PgColumn<{
            name: "compliance_info";
            tableName: "payment_processors";
            dataType: "json";
            columnType: "PgJson";
            data: {
                pciCompliant?: boolean;
                adultContentAllowed?: boolean;
                kycRequired?: boolean;
            };
            driverParam: unknown;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        createdAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "created_at";
            tableName: "payment_processors";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        updatedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: any;
            tableName: "payment_processors";
            dataType: any;
            columnType: any;
            data: any;
            driverParam: any;
            notNull: any;
            hasDefault: any;
            enumValues: any;
            baseColumn: any;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
export declare const merchantAccounts: import("drizzle-orm/pg-core").PgTableWithColumns<{
    name: "merchant_accounts";
    schema: undefined;
    columns: {
        id: import("drizzle-orm/pg-core").PgColumn<{
            name: "id";
            tableName: "merchant_accounts";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        processorId: import("drizzle-orm/pg-core").PgColumn<{
            name: "processor_id";
            tableName: "merchant_accounts";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        midIdentifier: import("drizzle-orm/pg-core").PgColumn<{
            name: "mid_identifier";
            tableName: "merchant_accounts";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        displayName: import("drizzle-orm/pg-core").PgColumn<{
            name: "display_name";
            tableName: "merchant_accounts";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        region: import("drizzle-orm/pg-core").PgColumn<{
            name: "region";
            tableName: "merchant_accounts";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        descriptor: import("drizzle-orm/pg-core").PgColumn<{
            name: "descriptor";
            tableName: "merchant_accounts";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        currency: import("drizzle-orm/pg-core").PgColumn<{
            name: "currency";
            tableName: "merchant_accounts";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        status: import("drizzle-orm/pg-core").PgColumn<{
            name: "status";
            tableName: "merchant_accounts";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        limits: import("drizzle-orm/pg-core").PgColumn<{
            name: "limits";
            tableName: "merchant_accounts";
            dataType: "json";
            columnType: "PgJson";
            data: {
                dailyVolume?: number;
                monthlyVolume?: number;
                transactionLimit?: number;
                chargebackThreshold?: number;
            };
            driverParam: unknown;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        riskProfile: import("drizzle-orm/pg-core").PgColumn<{
            name: "risk_profile";
            tableName: "merchant_accounts";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        platformRestrictions: import("drizzle-orm/pg-core").PgColumn<{
            name: "platform_restrictions";
            tableName: "merchant_accounts";
            dataType: "json";
            columnType: "PgJson";
            data: string[];
            driverParam: unknown;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        createdAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "created_at";
            tableName: "merchant_accounts";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        updatedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: any;
            tableName: "merchant_accounts";
            dataType: any;
            columnType: any;
            data: any;
            driverParam: any;
            notNull: any;
            hasDefault: any;
            enumValues: any;
            baseColumn: any;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
export declare const routingRules: import("drizzle-orm/pg-core").PgTableWithColumns<{
    name: "routing_rules";
    schema: undefined;
    columns: {
        id: import("drizzle-orm/pg-core").PgColumn<{
            name: "id";
            tableName: "routing_rules";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        name: import("drizzle-orm/pg-core").PgColumn<{
            name: "name";
            tableName: "routing_rules";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        description: import("drizzle-orm/pg-core").PgColumn<{
            name: "description";
            tableName: "routing_rules";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        priority: import("drizzle-orm/pg-core").PgColumn<{
            name: "priority";
            tableName: "routing_rules";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        isActive: import("drizzle-orm/pg-core").PgColumn<{
            name: "is_active";
            tableName: "routing_rules";
            dataType: "boolean";
            columnType: "PgBoolean";
            data: boolean;
            driverParam: boolean;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        conditions: import("drizzle-orm/pg-core").PgColumn<{
            name: "conditions";
            tableName: "routing_rules";
            dataType: "json";
            columnType: "PgJson";
            data: {
                platforms?: string[];
                regions?: string[];
                currencies?: string[];
                paymentMethods?: string[];
                amountRange?: {
                    min?: number;
                    max?: number;
                };
                riskScoreRange?: {
                    min?: number;
                    max?: number;
                };
                binRanges?: string[];
                timeWindows?: {
                    start: string;
                    end: string;
                }[];
                userTags?: string[];
            };
            driverParam: unknown;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        targets: import("drizzle-orm/pg-core").PgColumn<{
            name: "targets";
            tableName: "routing_rules";
            dataType: "json";
            columnType: "PgJson";
            data: {
                primaryMid?: string;
                fallbackMids?: string[];
                processorId?: string;
                splitPercentage?: number;
            };
            driverParam: unknown;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        canaryConfig: import("drizzle-orm/pg-core").PgColumn<{
            name: "canary_config";
            tableName: "routing_rules";
            dataType: "json";
            columnType: "PgJson";
            data: {
                enabled?: boolean;
                percentage?: number;
                platforms?: string[];
            };
            driverParam: unknown;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        createdBy: import("drizzle-orm/pg-core").PgColumn<{
            name: "created_by";
            tableName: "routing_rules";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        approvedBy: import("drizzle-orm/pg-core").PgColumn<{
            name: "approved_by";
            tableName: "routing_rules";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        approvedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "approved_at";
            tableName: "routing_rules";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        createdAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "created_at";
            tableName: "routing_rules";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        updatedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: any;
            tableName: "routing_rules";
            dataType: any;
            columnType: any;
            data: any;
            driverParam: any;
            notNull: any;
            hasDefault: any;
            enumValues: any;
            baseColumn: any;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
export declare const transactions: import("drizzle-orm/pg-core").PgTableWithColumns<{
    name: "transactions";
    schema: undefined;
    columns: {
        id: import("drizzle-orm/pg-core").PgColumn<{
            name: "id";
            tableName: "transactions";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        externalId: import("drizzle-orm/pg-core").PgColumn<{
            name: "external_id";
            tableName: "transactions";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        platformId: import("drizzle-orm/pg-core").PgColumn<{
            name: "platform_id";
            tableName: "transactions";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        userId: import("drizzle-orm/pg-core").PgColumn<{
            name: "user_id";
            tableName: "transactions";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        creatorId: import("drizzle-orm/pg-core").PgColumn<{
            name: "creator_id";
            tableName: "transactions";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        midId: import("drizzle-orm/pg-core").PgColumn<{
            name: "mid_id";
            tableName: "transactions";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        processorId: import("drizzle-orm/pg-core").PgColumn<{
            name: "processor_id";
            tableName: "transactions";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        amount: import("drizzle-orm/pg-core").PgColumn<{
            name: "amount";
            tableName: "transactions";
            dataType: "string";
            columnType: "PgNumeric";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        currency: import("drizzle-orm/pg-core").PgColumn<{
            name: "currency";
            tableName: "transactions";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        fees: import("drizzle-orm/pg-core").PgColumn<{
            name: "fees";
            tableName: "transactions";
            dataType: "string";
            columnType: "PgNumeric";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        netAmount: import("drizzle-orm/pg-core").PgColumn<{
            name: "net_amount";
            tableName: "transactions";
            dataType: "string";
            columnType: "PgNumeric";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        type: import("drizzle-orm/pg-core").PgColumn<{
            name: "type";
            tableName: "transactions";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        status: import("drizzle-orm/pg-core").PgColumn<{
            name: "status";
            tableName: "transactions";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        paymentMethod: import("drizzle-orm/pg-core").PgColumn<{
            name: "payment_method";
            tableName: "transactions";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        trustScore: import("drizzle-orm/pg-core").PgColumn<{
            name: "trust_score";
            tableName: "transactions";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        riskFlags: import("drizzle-orm/pg-core").PgColumn<{
            name: "risk_flags";
            tableName: "transactions";
            dataType: "json";
            columnType: "PgJson";
            data: string[];
            driverParam: unknown;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        fraudSignals: import("drizzle-orm/pg-core").PgColumn<{
            name: "fraud_signals";
            tableName: "transactions";
            dataType: "json";
            columnType: "PgJson";
            data: Record<string, any>;
            driverParam: unknown;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        metadata: import("drizzle-orm/pg-core").PgColumn<{
            name: "metadata";
            tableName: "transactions";
            dataType: "json";
            columnType: "PgJson";
            data: Record<string, any>;
            driverParam: unknown;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        processorResponse: import("drizzle-orm/pg-core").PgColumn<{
            name: "processor_response";
            tableName: "transactions";
            dataType: "json";
            columnType: "PgJson";
            data: Record<string, any>;
            driverParam: unknown;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        initiatedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "initiated_at";
            tableName: "transactions";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        authorizedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "authorized_at";
            tableName: "transactions";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        capturedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "captured_at";
            tableName: "transactions";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        failedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "failed_at";
            tableName: "transactions";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        createdAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "created_at";
            tableName: "transactions";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        updatedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: any;
            tableName: "transactions";
            dataType: any;
            columnType: any;
            data: any;
            driverParam: any;
            notNull: any;
            hasDefault: any;
            enumValues: any;
            baseColumn: any;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
export declare const transactionEvents: import("drizzle-orm/pg-core").PgTableWithColumns<{
    name: "transaction_events";
    schema: undefined;
    columns: {
        id: import("drizzle-orm/pg-core").PgColumn<{
            name: "id";
            tableName: "transaction_events";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        transactionId: import("drizzle-orm/pg-core").PgColumn<{
            name: "transaction_id";
            tableName: "transaction_events";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        eventType: import("drizzle-orm/pg-core").PgColumn<{
            name: "event_type";
            tableName: "transaction_events";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        eventSource: import("drizzle-orm/pg-core").PgColumn<{
            name: "event_source";
            tableName: "transaction_events";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        eventData: import("drizzle-orm/pg-core").PgColumn<{
            name: "event_data";
            tableName: "transaction_events";
            dataType: "json";
            columnType: "PgJson";
            data: Record<string, any>;
            driverParam: unknown;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        processorEventId: import("drizzle-orm/pg-core").PgColumn<{
            name: "processor_event_id";
            tableName: "transaction_events";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        amount: import("drizzle-orm/pg-core").PgColumn<{
            name: "amount";
            tableName: "transaction_events";
            dataType: "string";
            columnType: "PgNumeric";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        currency: import("drizzle-orm/pg-core").PgColumn<{
            name: "currency";
            tableName: "transaction_events";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        success: import("drizzle-orm/pg-core").PgColumn<{
            name: "success";
            tableName: "transaction_events";
            dataType: "boolean";
            columnType: "PgBoolean";
            data: boolean;
            driverParam: boolean;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        errorCode: import("drizzle-orm/pg-core").PgColumn<{
            name: "error_code";
            tableName: "transaction_events";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        errorMessage: import("drizzle-orm/pg-core").PgColumn<{
            name: "error_message";
            tableName: "transaction_events";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        createdAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "created_at";
            tableName: "transaction_events";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
export declare const refunds: import("drizzle-orm/pg-core").PgTableWithColumns<{
    name: "refunds";
    schema: undefined;
    columns: {
        id: import("drizzle-orm/pg-core").PgColumn<{
            name: "id";
            tableName: "refunds";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        transactionId: import("drizzle-orm/pg-core").PgColumn<{
            name: "transaction_id";
            tableName: "refunds";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        externalRefundId: import("drizzle-orm/pg-core").PgColumn<{
            name: "external_refund_id";
            tableName: "refunds";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        amount: import("drizzle-orm/pg-core").PgColumn<{
            name: "amount";
            tableName: "refunds";
            dataType: "string";
            columnType: "PgNumeric";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        currency: import("drizzle-orm/pg-core").PgColumn<{
            name: "currency";
            tableName: "refunds";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        reason: import("drizzle-orm/pg-core").PgColumn<{
            name: "reason";
            tableName: "refunds";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        reasonDetails: import("drizzle-orm/pg-core").PgColumn<{
            name: "reason_details";
            tableName: "refunds";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        origin: import("drizzle-orm/pg-core").PgColumn<{
            name: "origin";
            tableName: "refunds";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        status: import("drizzle-orm/pg-core").PgColumn<{
            name: "status";
            tableName: "refunds";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        trustVerificationId: import("drizzle-orm/pg-core").PgColumn<{
            name: "trust_verification_id";
            tableName: "refunds";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        trustScore: import("drizzle-orm/pg-core").PgColumn<{
            name: "trust_score";
            tableName: "refunds";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        requestedBy: import("drizzle-orm/pg-core").PgColumn<{
            name: "requested_by";
            tableName: "refunds";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        reviewedBy: import("drizzle-orm/pg-core").PgColumn<{
            name: "reviewed_by";
            tableName: "refunds";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        approvedBy: import("drizzle-orm/pg-core").PgColumn<{
            name: "approved_by";
            tableName: "refunds";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        decisionReason: import("drizzle-orm/pg-core").PgColumn<{
            name: "decision_reason";
            tableName: "refunds";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        evidence: import("drizzle-orm/pg-core").PgColumn<{
            name: "evidence";
            tableName: "refunds";
            dataType: "json";
            columnType: "PgJson";
            data: {
                contentAccessed?: boolean;
                accessDuration?: number;
                deviceFingerprint?: string;
                ipAddress?: string;
                screenshots?: string[];
                supportingDocs?: string[];
            };
            driverParam: unknown;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        creatorNotified: import("drizzle-orm/pg-core").PgColumn<{
            name: "creator_notified";
            tableName: "refunds";
            dataType: "boolean";
            columnType: "PgBoolean";
            data: boolean;
            driverParam: boolean;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        creatorResponse: import("drizzle-orm/pg-core").PgColumn<{
            name: "creator_response";
            tableName: "refunds";
            dataType: "json";
            columnType: "PgJson";
            data: Record<string, any>;
            driverParam: unknown;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        processorResponse: import("drizzle-orm/pg-core").PgColumn<{
            name: "processor_response";
            tableName: "refunds";
            dataType: "json";
            columnType: "PgJson";
            data: Record<string, any>;
            driverParam: unknown;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        ledgerEntryId: import("drizzle-orm/pg-core").PgColumn<{
            name: "ledger_entry_id";
            tableName: "refunds";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        requestedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "requested_at";
            tableName: "refunds";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        reviewedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "reviewed_at";
            tableName: "refunds";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        approvedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "approved_at";
            tableName: "refunds";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        processedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "processed_at";
            tableName: "refunds";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        createdAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "created_at";
            tableName: "refunds";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        updatedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: any;
            tableName: "refunds";
            dataType: any;
            columnType: any;
            data: any;
            driverParam: any;
            notNull: any;
            hasDefault: any;
            enumValues: any;
            baseColumn: any;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
export declare const disputes: import("drizzle-orm/pg-core").PgTableWithColumns<{
    name: "disputes";
    schema: undefined;
    columns: {
        id: import("drizzle-orm/pg-core").PgColumn<{
            name: "id";
            tableName: "disputes";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        transactionId: import("drizzle-orm/pg-core").PgColumn<{
            name: "transaction_id";
            tableName: "disputes";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        externalDisputeId: import("drizzle-orm/pg-core").PgColumn<{
            name: "external_dispute_id";
            tableName: "disputes";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        type: import("drizzle-orm/pg-core").PgColumn<{
            name: "type";
            tableName: "disputes";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        stage: import("drizzle-orm/pg-core").PgColumn<{
            name: "stage";
            tableName: "disputes";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        amount: import("drizzle-orm/pg-core").PgColumn<{
            name: "amount";
            tableName: "disputes";
            dataType: "string";
            columnType: "PgNumeric";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        currency: import("drizzle-orm/pg-core").PgColumn<{
            name: "currency";
            tableName: "disputes";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        reasonCode: import("drizzle-orm/pg-core").PgColumn<{
            name: "reason_code";
            tableName: "disputes";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        reasonDescription: import("drizzle-orm/pg-core").PgColumn<{
            name: "reason_description";
            tableName: "disputes";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        status: import("drizzle-orm/pg-core").PgColumn<{
            name: "status";
            tableName: "disputes";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        deadlineAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "deadline_at";
            tableName: "disputes";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        receivedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "received_at";
            tableName: "disputes";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        respondedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "responded_at";
            tableName: "disputes";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        resolvedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "resolved_at";
            tableName: "disputes";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        responseSubmitted: import("drizzle-orm/pg-core").PgColumn<{
            name: "response_submitted";
            tableName: "disputes";
            dataType: "boolean";
            columnType: "PgBoolean";
            data: boolean;
            driverParam: boolean;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        responseEvidence: import("drizzle-orm/pg-core").PgColumn<{
            name: "response_evidence";
            tableName: "disputes";
            dataType: "json";
            columnType: "PgJson";
            data: {
                documents?: string[];
                description?: string;
                submittedBy?: string;
            };
            driverParam: unknown;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        outcome: import("drizzle-orm/pg-core").PgColumn<{
            name: "outcome";
            tableName: "disputes";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        recoveredAmount: import("drizzle-orm/pg-core").PgColumn<{
            name: "recovered_amount";
            tableName: "disputes";
            dataType: "string";
            columnType: "PgNumeric";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        processorData: import("drizzle-orm/pg-core").PgColumn<{
            name: "processor_data";
            tableName: "disputes";
            dataType: "json";
            columnType: "PgJson";
            data: Record<string, any>;
            driverParam: unknown;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        createdAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "created_at";
            tableName: "disputes";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        updatedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: any;
            tableName: "disputes";
            dataType: any;
            columnType: any;
            data: any;
            driverParam: any;
            notNull: any;
            hasDefault: any;
            enumValues: any;
            baseColumn: any;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
export declare const settlements: import("drizzle-orm/pg-core").PgTableWithColumns<{
    name: "settlements";
    schema: undefined;
    columns: {
        id: import("drizzle-orm/pg-core").PgColumn<{
            name: "id";
            tableName: "settlements";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        processorId: import("drizzle-orm/pg-core").PgColumn<{
            name: "processor_id";
            tableName: "settlements";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        batchId: import("drizzle-orm/pg-core").PgColumn<{
            name: "batch_id";
            tableName: "settlements";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        settlementDate: import("drizzle-orm/pg-core").PgColumn<{
            name: "settlement_date";
            tableName: "settlements";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        currency: import("drizzle-orm/pg-core").PgColumn<{
            name: "currency";
            tableName: "settlements";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        grossAmount: import("drizzle-orm/pg-core").PgColumn<{
            name: "gross_amount";
            tableName: "settlements";
            dataType: "string";
            columnType: "PgNumeric";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        fees: import("drizzle-orm/pg-core").PgColumn<{
            name: "fees";
            tableName: "settlements";
            dataType: "string";
            columnType: "PgNumeric";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        chargebacks: import("drizzle-orm/pg-core").PgColumn<{
            name: "chargebacks";
            tableName: "settlements";
            dataType: "string";
            columnType: "PgNumeric";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        refunds: import("drizzle-orm/pg-core").PgColumn<{
            name: "refunds";
            tableName: "settlements";
            dataType: "string";
            columnType: "PgNumeric";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        netAmount: import("drizzle-orm/pg-core").PgColumn<{
            name: "net_amount";
            tableName: "settlements";
            dataType: "string";
            columnType: "PgNumeric";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        transactionCount: import("drizzle-orm/pg-core").PgColumn<{
            name: "transaction_count";
            tableName: "settlements";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        fileUrl: import("drizzle-orm/pg-core").PgColumn<{
            name: "file_url";
            tableName: "settlements";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        fileHash: import("drizzle-orm/pg-core").PgColumn<{
            name: "file_hash";
            tableName: "settlements";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        status: import("drizzle-orm/pg-core").PgColumn<{
            name: "status";
            tableName: "settlements";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        reconciledAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "reconciled_at";
            tableName: "settlements";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        reconciledBy: import("drizzle-orm/pg-core").PgColumn<{
            name: "reconciled_by";
            tableName: "settlements";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        discrepancies: import("drizzle-orm/pg-core").PgColumn<{
            name: "discrepancies";
            tableName: "settlements";
            dataType: "json";
            columnType: "PgJson";
            data: {
                missingTransactions?: string[];
                amountMismatches?: {
                    transactionId: string;
                    expected: number;
                    actual: number;
                }[];
                unexpectedTransactions?: string[];
            };
            driverParam: unknown;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        ledgerEntryId: import("drizzle-orm/pg-core").PgColumn<{
            name: "ledger_entry_id";
            tableName: "settlements";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        createdAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "created_at";
            tableName: "settlements";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        updatedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: any;
            tableName: "settlements";
            dataType: any;
            columnType: any;
            data: any;
            driverParam: any;
            notNull: any;
            hasDefault: any;
            enumValues: any;
            baseColumn: any;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
export declare const payoutMethods: import("drizzle-orm/pg-core").PgTableWithColumns<{
    name: "payout_methods";
    schema: undefined;
    columns: {
        id: import("drizzle-orm/pg-core").PgColumn<{
            name: "id";
            tableName: "payout_methods";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        name: import("drizzle-orm/pg-core").PgColumn<{
            name: "name";
            tableName: "payout_methods";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        displayName: import("drizzle-orm/pg-core").PgColumn<{
            name: "display_name";
            tableName: "payout_methods";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        type: import("drizzle-orm/pg-core").PgColumn<{
            name: "type";
            tableName: "payout_methods";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        rails: import("drizzle-orm/pg-core").PgColumn<{
            name: "rails";
            tableName: "payout_methods";
            dataType: "json";
            columnType: "PgJson";
            data: string[];
            driverParam: unknown;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        currencies: import("drizzle-orm/pg-core").PgColumn<{
            name: "currencies";
            tableName: "payout_methods";
            dataType: "json";
            columnType: "PgJson";
            data: string[];
            driverParam: unknown;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        regions: import("drizzle-orm/pg-core").PgColumn<{
            name: "regions";
            tableName: "payout_methods";
            dataType: "json";
            columnType: "PgJson";
            data: string[];
            driverParam: unknown;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        fees: import("drizzle-orm/pg-core").PgColumn<{
            name: "fees";
            tableName: "payout_methods";
            dataType: "json";
            columnType: "PgJson";
            data: {
                fixedFee?: number;
                percentageFee?: number;
                currency?: string;
                minimumFee?: number;
                maximumFee?: number;
            };
            driverParam: unknown;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        limits: import("drizzle-orm/pg-core").PgColumn<{
            name: "limits";
            tableName: "payout_methods";
            dataType: "json";
            columnType: "PgJson";
            data: {
                minAmount?: number;
                maxAmount?: number;
                dailyLimit?: number;
                monthlyLimit?: number;
            };
            driverParam: unknown;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        processingTime: import("drizzle-orm/pg-core").PgColumn<{
            name: "processing_time";
            tableName: "payout_methods";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        requirements: import("drizzle-orm/pg-core").PgColumn<{
            name: "requirements";
            tableName: "payout_methods";
            dataType: "json";
            columnType: "PgJson";
            data: {
                kyc?: boolean;
                bankAccount?: boolean;
                taxId?: boolean;
                address?: boolean;
            };
            driverParam: unknown;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        isActive: import("drizzle-orm/pg-core").PgColumn<{
            name: "is_active";
            tableName: "payout_methods";
            dataType: "boolean";
            columnType: "PgBoolean";
            data: boolean;
            driverParam: boolean;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        createdAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "created_at";
            tableName: "payout_methods";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        updatedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: any;
            tableName: "payout_methods";
            dataType: any;
            columnType: any;
            data: any;
            driverParam: any;
            notNull: any;
            hasDefault: any;
            enumValues: any;
            baseColumn: any;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
export declare const payouts: import("drizzle-orm/pg-core").PgTableWithColumns<{
    name: "payouts";
    schema: undefined;
    columns: {
        id: import("drizzle-orm/pg-core").PgColumn<{
            name: "id";
            tableName: "payouts";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        creatorId: import("drizzle-orm/pg-core").PgColumn<{
            name: "creator_id";
            tableName: "payouts";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        batchId: import("drizzle-orm/pg-core").PgColumn<{
            name: "batch_id";
            tableName: "payouts";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        payoutMethodId: import("drizzle-orm/pg-core").PgColumn<{
            name: "payout_method_id";
            tableName: "payouts";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        amount: import("drizzle-orm/pg-core").PgColumn<{
            name: "amount";
            tableName: "payouts";
            dataType: "string";
            columnType: "PgNumeric";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        currency: import("drizzle-orm/pg-core").PgColumn<{
            name: "currency";
            tableName: "payouts";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        fees: import("drizzle-orm/pg-core").PgColumn<{
            name: "fees";
            tableName: "payouts";
            dataType: "string";
            columnType: "PgNumeric";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        netAmount: import("drizzle-orm/pg-core").PgColumn<{
            name: "net_amount";
            tableName: "payouts";
            dataType: "string";
            columnType: "PgNumeric";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        status: import("drizzle-orm/pg-core").PgColumn<{
            name: "status";
            tableName: "payouts";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        externalPayoutId: import("drizzle-orm/pg-core").PgColumn<{
            name: "external_payout_id";
            tableName: "payouts";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        failureReason: import("drizzle-orm/pg-core").PgColumn<{
            name: "failure_reason";
            tableName: "payouts";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        creatorPayoutInfo: import("drizzle-orm/pg-core").PgColumn<{
            name: "creator_payout_info";
            tableName: "payouts";
            dataType: "json";
            columnType: "PgJson";
            data: {
                email?: string;
                bankAccount?: string;
                walletAddress?: string;
                recipientName?: string;
                metadata?: Record<string, any>;
            };
            driverParam: unknown;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        requestedBy: import("drizzle-orm/pg-core").PgColumn<{
            name: "requested_by";
            tableName: "payouts";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        approvedBy: import("drizzle-orm/pg-core").PgColumn<{
            name: "approved_by";
            tableName: "payouts";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        approvedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "approved_at";
            tableName: "payouts";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        processorResponse: import("drizzle-orm/pg-core").PgColumn<{
            name: "processor_response";
            tableName: "payouts";
            dataType: "json";
            columnType: "PgJson";
            data: Record<string, any>;
            driverParam: unknown;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        taxWithholding: import("drizzle-orm/pg-core").PgColumn<{
            name: "tax_withholding";
            tableName: "payouts";
            dataType: "string";
            columnType: "PgNumeric";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        taxYear: import("drizzle-orm/pg-core").PgColumn<{
            name: "tax_year";
            tableName: "payouts";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        form1099Generated: import("drizzle-orm/pg-core").PgColumn<{
            name: "form_1099_generated";
            tableName: "payouts";
            dataType: "boolean";
            columnType: "PgBoolean";
            data: boolean;
            driverParam: boolean;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        ledgerEntryId: import("drizzle-orm/pg-core").PgColumn<{
            name: "ledger_entry_id";
            tableName: "payouts";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        requestedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "requested_at";
            tableName: "payouts";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        sentAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "sent_at";
            tableName: "payouts";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        completedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "completed_at";
            tableName: "payouts";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        createdAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "created_at";
            tableName: "payouts";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        updatedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: any;
            tableName: "payouts";
            dataType: any;
            columnType: any;
            data: any;
            driverParam: any;
            notNull: any;
            hasDefault: any;
            enumValues: any;
            baseColumn: any;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
export declare const payoutBatches: import("drizzle-orm/pg-core").PgTableWithColumns<{
    name: "payout_batches";
    schema: undefined;
    columns: {
        id: import("drizzle-orm/pg-core").PgColumn<{
            name: "id";
            tableName: "payout_batches";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        batchNumber: import("drizzle-orm/pg-core").PgColumn<{
            name: "batch_number";
            tableName: "payout_batches";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        payoutMethodId: import("drizzle-orm/pg-core").PgColumn<{
            name: "payout_method_id";
            tableName: "payout_batches";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        payoutCount: import("drizzle-orm/pg-core").PgColumn<{
            name: "payout_count";
            tableName: "payout_batches";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        totalAmount: import("drizzle-orm/pg-core").PgColumn<{
            name: "total_amount";
            tableName: "payout_batches";
            dataType: "string";
            columnType: "PgNumeric";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        totalFees: import("drizzle-orm/pg-core").PgColumn<{
            name: "total_fees";
            tableName: "payout_batches";
            dataType: "string";
            columnType: "PgNumeric";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        netAmount: import("drizzle-orm/pg-core").PgColumn<{
            name: "net_amount";
            tableName: "payout_batches";
            dataType: "string";
            columnType: "PgNumeric";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        currency: import("drizzle-orm/pg-core").PgColumn<{
            name: "currency";
            tableName: "payout_batches";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        status: import("drizzle-orm/pg-core").PgColumn<{
            name: "status";
            tableName: "payout_batches";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        fileUrl: import("drizzle-orm/pg-core").PgColumn<{
            name: "file_url";
            tableName: "payout_batches";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        externalBatchId: import("drizzle-orm/pg-core").PgColumn<{
            name: "external_batch_id";
            tableName: "payout_batches";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        createdBy: import("drizzle-orm/pg-core").PgColumn<{
            name: "created_by";
            tableName: "payout_batches";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        approvedBy: import("drizzle-orm/pg-core").PgColumn<{
            name: "approved_by";
            tableName: "payout_batches";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        approvedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "approved_at";
            tableName: "payout_batches";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        submittedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "submitted_at";
            tableName: "payout_batches";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        completedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "completed_at";
            tableName: "payout_batches";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        createdAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "created_at";
            tableName: "payout_batches";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        updatedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: any;
            tableName: "payout_batches";
            dataType: any;
            columnType: any;
            data: any;
            driverParam: any;
            notNull: any;
            hasDefault: any;
            enumValues: any;
            baseColumn: any;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
export declare const trustScores: import("drizzle-orm/pg-core").PgTableWithColumns<{
    name: "trust_scores";
    schema: undefined;
    columns: {
        id: import("drizzle-orm/pg-core").PgColumn<{
            name: "id";
            tableName: "trust_scores";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        transactionId: import("drizzle-orm/pg-core").PgColumn<{
            name: "transaction_id";
            tableName: "trust_scores";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        userId: import("drizzle-orm/pg-core").PgColumn<{
            name: "user_id";
            tableName: "trust_scores";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        entityType: import("drizzle-orm/pg-core").PgColumn<{
            name: "entity_type";
            tableName: "trust_scores";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        entityId: import("drizzle-orm/pg-core").PgColumn<{
            name: "entity_id";
            tableName: "trust_scores";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        score: import("drizzle-orm/pg-core").PgColumn<{
            name: "score";
            tableName: "trust_scores";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: true;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        confidence: import("drizzle-orm/pg-core").PgColumn<{
            name: "confidence";
            tableName: "trust_scores";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: true;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        modelVersion: import("drizzle-orm/pg-core").PgColumn<{
            name: "model_version";
            tableName: "trust_scores";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        decision: import("drizzle-orm/pg-core").PgColumn<{
            name: "decision";
            tableName: "trust_scores";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        reasonCodes: import("drizzle-orm/pg-core").PgColumn<{
            name: "reason_codes";
            tableName: "trust_scores";
            dataType: "json";
            columnType: "PgJson";
            data: string[];
            driverParam: unknown;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        signals: import("drizzle-orm/pg-core").PgColumn<{
            name: "signals";
            tableName: "trust_scores";
            dataType: "json";
            columnType: "PgJson";
            data: {
                device?: {
                    fingerprint?: string;
                    reputation?: number;
                    velocity?: number;
                    newDevice?: boolean;
                };
                network?: {
                    ipReputation?: number;
                    geoVelocity?: number;
                    torVpn?: boolean;
                    suspiciousIsp?: boolean;
                };
                payment?: {
                    avsResult?: string;
                    cvvResult?: string;
                    binCountry?: string;
                    issuerType?: string;
                    prepaidCard?: boolean;
                };
                behavioral?: {
                    accountAge?: number;
                    spendingPattern?: number;
                    refundHistory?: number;
                    velocityScore?: number;
                };
                platform?: {
                    riskLevel?: string;
                    contentType?: string;
                    creatorTier?: string;
                };
            };
            driverParam: unknown;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        explanation: import("drizzle-orm/pg-core").PgColumn<{
            name: "explanation";
            tableName: "trust_scores";
            dataType: "json";
            columnType: "PgJson";
            data: {
                primaryFactors?: string[];
                riskFactors?: string[];
                protectiveFactors?: string[];
                recommendations?: string[];
            };
            driverParam: unknown;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        processingTimeMs: import("drizzle-orm/pg-core").PgColumn<{
            name: "processing_time_ms";
            tableName: "trust_scores";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        createdAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "created_at";
            tableName: "trust_scores";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
export declare const approvals: import("drizzle-orm/pg-core").PgTableWithColumns<{
    name: "approvals";
    schema: undefined;
    columns: {
        id: import("drizzle-orm/pg-core").PgColumn<{
            name: "id";
            tableName: "approvals";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        entityType: import("drizzle-orm/pg-core").PgColumn<{
            name: "entity_type";
            tableName: "approvals";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        entityId: import("drizzle-orm/pg-core").PgColumn<{
            name: "entity_id";
            tableName: "approvals";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        approvalType: import("drizzle-orm/pg-core").PgColumn<{
            name: "approval_type";
            tableName: "approvals";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        state: import("drizzle-orm/pg-core").PgColumn<{
            name: "state";
            tableName: "approvals";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        priority: import("drizzle-orm/pg-core").PgColumn<{
            name: "priority";
            tableName: "approvals";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        assigneeId: import("drizzle-orm/pg-core").PgColumn<{
            name: "assignee_id";
            tableName: "approvals";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        assignedTeam: import("drizzle-orm/pg-core").PgColumn<{
            name: "assigned_team";
            tableName: "approvals";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        slaMinutes: import("drizzle-orm/pg-core").PgColumn<{
            name: "sla_minutes";
            tableName: "approvals";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        slaAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "sla_at";
            tableName: "approvals";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        escalatedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "escalated_at";
            tableName: "approvals";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        requestedBy: import("drizzle-orm/pg-core").PgColumn<{
            name: "requested_by";
            tableName: "approvals";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        requestReason: import("drizzle-orm/pg-core").PgColumn<{
            name: "request_reason";
            tableName: "approvals";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        requestData: import("drizzle-orm/pg-core").PgColumn<{
            name: "request_data";
            tableName: "approvals";
            dataType: "json";
            columnType: "PgJson";
            data: Record<string, any>;
            driverParam: unknown;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        decidedBy: import("drizzle-orm/pg-core").PgColumn<{
            name: "decided_by";
            tableName: "approvals";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        decidedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "decided_at";
            tableName: "approvals";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        decision: import("drizzle-orm/pg-core").PgColumn<{
            name: "decision";
            tableName: "approvals";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        decisionReason: import("drizzle-orm/pg-core").PgColumn<{
            name: "decision_reason";
            tableName: "approvals";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        decisionData: import("drizzle-orm/pg-core").PgColumn<{
            name: "decision_data";
            tableName: "approvals";
            dataType: "json";
            columnType: "PgJson";
            data: Record<string, any>;
            driverParam: unknown;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        history: import("drizzle-orm/pg-core").PgColumn<{
            name: "history";
            tableName: "approvals";
            dataType: "json";
            columnType: "PgJson";
            data: {
                timestamp: string;
                action: string;
                actor: string;
                details?: Record<string, any>;
            }[];
            driverParam: unknown;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        notificationsSent: import("drizzle-orm/pg-core").PgColumn<{
            name: "notifications_sent";
            tableName: "approvals";
            dataType: "json";
            columnType: "PgJson";
            data: {
                timestamp: string;
                type: string;
                recipient: string;
                success: boolean;
            }[];
            driverParam: unknown;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        createdAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "created_at";
            tableName: "approvals";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        updatedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: any;
            tableName: "approvals";
            dataType: any;
            columnType: any;
            data: any;
            driverParam: any;
            notNull: any;
            hasDefault: any;
            enumValues: any;
            baseColumn: any;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
export declare const financialAuditTrail: import("drizzle-orm/pg-core").PgTableWithColumns<{
    name: "financial_audit_trail";
    schema: undefined;
    columns: {
        id: import("drizzle-orm/pg-core").PgColumn<{
            name: "id";
            tableName: "financial_audit_trail";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        actorType: import("drizzle-orm/pg-core").PgColumn<{
            name: "actor_type";
            tableName: "financial_audit_trail";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        actorId: import("drizzle-orm/pg-core").PgColumn<{
            name: "actor_id";
            tableName: "financial_audit_trail";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        actorName: import("drizzle-orm/pg-core").PgColumn<{
            name: "actor_name";
            tableName: "financial_audit_trail";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        action: import("drizzle-orm/pg-core").PgColumn<{
            name: "action";
            tableName: "financial_audit_trail";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        category: import("drizzle-orm/pg-core").PgColumn<{
            name: "category";
            tableName: "financial_audit_trail";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        entityType: import("drizzle-orm/pg-core").PgColumn<{
            name: "entity_type";
            tableName: "financial_audit_trail";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        entityId: import("drizzle-orm/pg-core").PgColumn<{
            name: "entity_id";
            tableName: "financial_audit_trail";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        beforeState: import("drizzle-orm/pg-core").PgColumn<{
            name: "before_state";
            tableName: "financial_audit_trail";
            dataType: "json";
            columnType: "PgJson";
            data: Record<string, any>;
            driverParam: unknown;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        afterState: import("drizzle-orm/pg-core").PgColumn<{
            name: "after_state";
            tableName: "financial_audit_trail";
            dataType: "json";
            columnType: "PgJson";
            data: Record<string, any>;
            driverParam: unknown;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        platformId: import("drizzle-orm/pg-core").PgColumn<{
            name: "platform_id";
            tableName: "financial_audit_trail";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        sessionId: import("drizzle-orm/pg-core").PgColumn<{
            name: "session_id";
            tableName: "financial_audit_trail";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        requestId: import("drizzle-orm/pg-core").PgColumn<{
            name: "request_id";
            tableName: "financial_audit_trail";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        ipAddress: import("drizzle-orm/pg-core").PgColumn<{
            name: "ip_address";
            tableName: "financial_audit_trail";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        userAgent: import("drizzle-orm/pg-core").PgColumn<{
            name: "user_agent";
            tableName: "financial_audit_trail";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        geoLocation: import("drizzle-orm/pg-core").PgColumn<{
            name: "geo_location";
            tableName: "financial_audit_trail";
            dataType: "json";
            columnType: "PgJson";
            data: {
                country?: string;
                region?: string;
                city?: string;
                latitude?: number;
                longitude?: number;
            };
            driverParam: unknown;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        riskLevel: import("drizzle-orm/pg-core").PgColumn<{
            name: "risk_level";
            tableName: "financial_audit_trail";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        complianceFlags: import("drizzle-orm/pg-core").PgColumn<{
            name: "compliance_flags";
            tableName: "financial_audit_trail";
            dataType: "json";
            columnType: "PgJson";
            data: string[];
            driverParam: unknown;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        metadata: import("drizzle-orm/pg-core").PgColumn<{
            name: "metadata";
            tableName: "financial_audit_trail";
            dataType: "json";
            columnType: "PgJson";
            data: Record<string, any>;
            driverParam: unknown;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        createdAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "created_at";
            tableName: "financial_audit_trail";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
export declare const financialProducts: import("drizzle-orm/pg-core").PgTableWithColumns<{
    name: "financial_products";
    schema: undefined;
    columns: {
        id: import("drizzle-orm/pg-core").PgColumn<{
            name: "id";
            tableName: "financial_products";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        productType: import("drizzle-orm/pg-core").PgColumn<{
            name: "product_type";
            tableName: "financial_products";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        productName: import("drizzle-orm/pg-core").PgColumn<{
            name: "product_name";
            tableName: "financial_products";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        displayName: import("drizzle-orm/pg-core").PgColumn<{
            name: "display_name";
            tableName: "financial_products";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        description: import("drizzle-orm/pg-core").PgColumn<{
            name: "description";
            tableName: "financial_products";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
        }, {}, {}>;
        configuration: import("drizzle-orm/pg-core").PgColumn<{
            name: "configuration";
            tableName: "financial_products";
            dataType: "json";
            columnType: "PgJson";
            data: Record<string, any>;
            driverParam: unknown;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        enabledPlatforms: import("drizzle-orm/pg-core").PgColumn<{
            name: "enabled_platforms";
            tableName: "financial_products";
            dataType: "json";
            columnType: "PgJson";
            data: string[];
            driverParam: unknown;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        regionAvailability: import("drizzle-orm/pg-core").PgColumn<{
            name: "region_availability";
            tableName: "financial_products";
            dataType: "json";
            columnType: "PgJson";
            data: string[];
            driverParam: unknown;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        isActive: import("drizzle-orm/pg-core").PgColumn<{
            name: "is_active";
            tableName: "financial_products";
            dataType: "boolean";
            columnType: "PgBoolean";
            data: boolean;
            driverParam: boolean;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        isBeta: import("drizzle-orm/pg-core").PgColumn<{
            name: "is_beta";
            tableName: "financial_products";
            dataType: "boolean";
            columnType: "PgBoolean";
            data: boolean;
            driverParam: boolean;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        rolloutPercentage: import("drizzle-orm/pg-core").PgColumn<{
            name: "rollout_percentage";
            tableName: "financial_products";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        limits: import("drizzle-orm/pg-core").PgColumn<{
            name: "limits";
            tableName: "financial_products";
            dataType: "json";
            columnType: "PgJson";
            data: Record<string, any>;
            driverParam: unknown;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        rules: import("drizzle-orm/pg-core").PgColumn<{
            name: "rules";
            tableName: "financial_products";
            dataType: "json";
            columnType: "PgJson";
            data: Record<string, any>;
            driverParam: unknown;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        createdAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "created_at";
            tableName: "financial_products";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            enumValues: undefined;
            baseColumn: never;
        }, {}, {}>;
        updatedAt: import("drizzle-orm/pg-core").PgColumn<{
            name: any;
            tableName: "financial_products";
            dataType: any;
            columnType: any;
            data: any;
            driverParam: any;
            notNull: any;
            hasDefault: any;
            enumValues: any;
            baseColumn: any;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
export declare const financialSchema: {
    paymentProcessors: import("drizzle-orm/pg-core").PgTableWithColumns<{
        name: "payment_processors";
        schema: undefined;
        columns: {
            id: import("drizzle-orm/pg-core").PgColumn<{
                name: "id";
                tableName: "payment_processors";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            name: import("drizzle-orm/pg-core").PgColumn<{
                name: "name";
                tableName: "payment_processors";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            displayName: import("drizzle-orm/pg-core").PgColumn<{
                name: "display_name";
                tableName: "payment_processors";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            processorType: import("drizzle-orm/pg-core").PgColumn<{
                name: "processor_type";
                tableName: "payment_processors";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            rails: import("drizzle-orm/pg-core").PgColumn<{
                name: "rails";
                tableName: "payment_processors";
                dataType: "json";
                columnType: "PgJson";
                data: string[];
                driverParam: unknown;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            regionTags: import("drizzle-orm/pg-core").PgColumn<{
                name: "region_tags";
                tableName: "payment_processors";
                dataType: "json";
                columnType: "PgJson";
                data: string[];
                driverParam: unknown;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            currencies: import("drizzle-orm/pg-core").PgColumn<{
                name: "currencies";
                tableName: "payment_processors";
                dataType: "json";
                columnType: "PgJson";
                data: string[];
                driverParam: unknown;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            status: import("drizzle-orm/pg-core").PgColumn<{
                name: "status";
                tableName: "payment_processors";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            apiEndpoint: import("drizzle-orm/pg-core").PgColumn<{
                name: "api_endpoint";
                tableName: "payment_processors";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            webhookEndpoint: import("drizzle-orm/pg-core").PgColumn<{
                name: "webhook_endpoint";
                tableName: "payment_processors";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            configuration: import("drizzle-orm/pg-core").PgColumn<{
                name: "configuration";
                tableName: "payment_processors";
                dataType: "json";
                columnType: "PgJson";
                data: Record<string, any>;
                driverParam: unknown;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            fees: import("drizzle-orm/pg-core").PgColumn<{
                name: "fees";
                tableName: "payment_processors";
                dataType: "json";
                columnType: "PgJson";
                data: {
                    cardRate?: number;
                    fixedFee?: number;
                    currency?: string;
                    chargebackFee?: number;
                };
                driverParam: unknown;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            limits: import("drizzle-orm/pg-core").PgColumn<{
                name: "limits";
                tableName: "payment_processors";
                dataType: "json";
                columnType: "PgJson";
                data: {
                    minAmount?: number;
                    maxAmount?: number;
                    dailyLimit?: number;
                    monthlyLimit?: number;
                };
                driverParam: unknown;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            complianceInfo: import("drizzle-orm/pg-core").PgColumn<{
                name: "compliance_info";
                tableName: "payment_processors";
                dataType: "json";
                columnType: "PgJson";
                data: {
                    pciCompliant?: boolean;
                    adultContentAllowed?: boolean;
                    kycRequired?: boolean;
                };
                driverParam: unknown;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            createdAt: import("drizzle-orm/pg-core").PgColumn<{
                name: "created_at";
                tableName: "payment_processors";
                dataType: "date";
                columnType: "PgTimestamp";
                data: Date;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            updatedAt: import("drizzle-orm/pg-core").PgColumn<{
                name: any;
                tableName: "payment_processors";
                dataType: any;
                columnType: any;
                data: any;
                driverParam: any;
                notNull: any;
                hasDefault: any;
                enumValues: any;
                baseColumn: any;
            }, {}, {}>;
        };
        dialect: "pg";
    }>;
    merchantAccounts: import("drizzle-orm/pg-core").PgTableWithColumns<{
        name: "merchant_accounts";
        schema: undefined;
        columns: {
            id: import("drizzle-orm/pg-core").PgColumn<{
                name: "id";
                tableName: "merchant_accounts";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            processorId: import("drizzle-orm/pg-core").PgColumn<{
                name: "processor_id";
                tableName: "merchant_accounts";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            midIdentifier: import("drizzle-orm/pg-core").PgColumn<{
                name: "mid_identifier";
                tableName: "merchant_accounts";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            displayName: import("drizzle-orm/pg-core").PgColumn<{
                name: "display_name";
                tableName: "merchant_accounts";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            region: import("drizzle-orm/pg-core").PgColumn<{
                name: "region";
                tableName: "merchant_accounts";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            descriptor: import("drizzle-orm/pg-core").PgColumn<{
                name: "descriptor";
                tableName: "merchant_accounts";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            currency: import("drizzle-orm/pg-core").PgColumn<{
                name: "currency";
                tableName: "merchant_accounts";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            status: import("drizzle-orm/pg-core").PgColumn<{
                name: "status";
                tableName: "merchant_accounts";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            limits: import("drizzle-orm/pg-core").PgColumn<{
                name: "limits";
                tableName: "merchant_accounts";
                dataType: "json";
                columnType: "PgJson";
                data: {
                    dailyVolume?: number;
                    monthlyVolume?: number;
                    transactionLimit?: number;
                    chargebackThreshold?: number;
                };
                driverParam: unknown;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            riskProfile: import("drizzle-orm/pg-core").PgColumn<{
                name: "risk_profile";
                tableName: "merchant_accounts";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            platformRestrictions: import("drizzle-orm/pg-core").PgColumn<{
                name: "platform_restrictions";
                tableName: "merchant_accounts";
                dataType: "json";
                columnType: "PgJson";
                data: string[];
                driverParam: unknown;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            createdAt: import("drizzle-orm/pg-core").PgColumn<{
                name: "created_at";
                tableName: "merchant_accounts";
                dataType: "date";
                columnType: "PgTimestamp";
                data: Date;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            updatedAt: import("drizzle-orm/pg-core").PgColumn<{
                name: any;
                tableName: "merchant_accounts";
                dataType: any;
                columnType: any;
                data: any;
                driverParam: any;
                notNull: any;
                hasDefault: any;
                enumValues: any;
                baseColumn: any;
            }, {}, {}>;
        };
        dialect: "pg";
    }>;
    routingRules: import("drizzle-orm/pg-core").PgTableWithColumns<{
        name: "routing_rules";
        schema: undefined;
        columns: {
            id: import("drizzle-orm/pg-core").PgColumn<{
                name: "id";
                tableName: "routing_rules";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            name: import("drizzle-orm/pg-core").PgColumn<{
                name: "name";
                tableName: "routing_rules";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            description: import("drizzle-orm/pg-core").PgColumn<{
                name: "description";
                tableName: "routing_rules";
                dataType: "string";
                columnType: "PgText";
                data: string;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            priority: import("drizzle-orm/pg-core").PgColumn<{
                name: "priority";
                tableName: "routing_rules";
                dataType: "number";
                columnType: "PgInteger";
                data: number;
                driverParam: string | number;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            isActive: import("drizzle-orm/pg-core").PgColumn<{
                name: "is_active";
                tableName: "routing_rules";
                dataType: "boolean";
                columnType: "PgBoolean";
                data: boolean;
                driverParam: boolean;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            conditions: import("drizzle-orm/pg-core").PgColumn<{
                name: "conditions";
                tableName: "routing_rules";
                dataType: "json";
                columnType: "PgJson";
                data: {
                    platforms?: string[];
                    regions?: string[];
                    currencies?: string[];
                    paymentMethods?: string[];
                    amountRange?: {
                        min?: number;
                        max?: number;
                    };
                    riskScoreRange?: {
                        min?: number;
                        max?: number;
                    };
                    binRanges?: string[];
                    timeWindows?: {
                        start: string;
                        end: string;
                    }[];
                    userTags?: string[];
                };
                driverParam: unknown;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            targets: import("drizzle-orm/pg-core").PgColumn<{
                name: "targets";
                tableName: "routing_rules";
                dataType: "json";
                columnType: "PgJson";
                data: {
                    primaryMid?: string;
                    fallbackMids?: string[];
                    processorId?: string;
                    splitPercentage?: number;
                };
                driverParam: unknown;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            canaryConfig: import("drizzle-orm/pg-core").PgColumn<{
                name: "canary_config";
                tableName: "routing_rules";
                dataType: "json";
                columnType: "PgJson";
                data: {
                    enabled?: boolean;
                    percentage?: number;
                    platforms?: string[];
                };
                driverParam: unknown;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            createdBy: import("drizzle-orm/pg-core").PgColumn<{
                name: "created_by";
                tableName: "routing_rules";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            approvedBy: import("drizzle-orm/pg-core").PgColumn<{
                name: "approved_by";
                tableName: "routing_rules";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            approvedAt: import("drizzle-orm/pg-core").PgColumn<{
                name: "approved_at";
                tableName: "routing_rules";
                dataType: "date";
                columnType: "PgTimestamp";
                data: Date;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            createdAt: import("drizzle-orm/pg-core").PgColumn<{
                name: "created_at";
                tableName: "routing_rules";
                dataType: "date";
                columnType: "PgTimestamp";
                data: Date;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            updatedAt: import("drizzle-orm/pg-core").PgColumn<{
                name: any;
                tableName: "routing_rules";
                dataType: any;
                columnType: any;
                data: any;
                driverParam: any;
                notNull: any;
                hasDefault: any;
                enumValues: any;
                baseColumn: any;
            }, {}, {}>;
        };
        dialect: "pg";
    }>;
    transactions: import("drizzle-orm/pg-core").PgTableWithColumns<{
        name: "transactions";
        schema: undefined;
        columns: {
            id: import("drizzle-orm/pg-core").PgColumn<{
                name: "id";
                tableName: "transactions";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            externalId: import("drizzle-orm/pg-core").PgColumn<{
                name: "external_id";
                tableName: "transactions";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            platformId: import("drizzle-orm/pg-core").PgColumn<{
                name: "platform_id";
                tableName: "transactions";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            userId: import("drizzle-orm/pg-core").PgColumn<{
                name: "user_id";
                tableName: "transactions";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            creatorId: import("drizzle-orm/pg-core").PgColumn<{
                name: "creator_id";
                tableName: "transactions";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            midId: import("drizzle-orm/pg-core").PgColumn<{
                name: "mid_id";
                tableName: "transactions";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            processorId: import("drizzle-orm/pg-core").PgColumn<{
                name: "processor_id";
                tableName: "transactions";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            amount: import("drizzle-orm/pg-core").PgColumn<{
                name: "amount";
                tableName: "transactions";
                dataType: "string";
                columnType: "PgNumeric";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            currency: import("drizzle-orm/pg-core").PgColumn<{
                name: "currency";
                tableName: "transactions";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            fees: import("drizzle-orm/pg-core").PgColumn<{
                name: "fees";
                tableName: "transactions";
                dataType: "string";
                columnType: "PgNumeric";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            netAmount: import("drizzle-orm/pg-core").PgColumn<{
                name: "net_amount";
                tableName: "transactions";
                dataType: "string";
                columnType: "PgNumeric";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            type: import("drizzle-orm/pg-core").PgColumn<{
                name: "type";
                tableName: "transactions";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            status: import("drizzle-orm/pg-core").PgColumn<{
                name: "status";
                tableName: "transactions";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            paymentMethod: import("drizzle-orm/pg-core").PgColumn<{
                name: "payment_method";
                tableName: "transactions";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            trustScore: import("drizzle-orm/pg-core").PgColumn<{
                name: "trust_score";
                tableName: "transactions";
                dataType: "number";
                columnType: "PgInteger";
                data: number;
                driverParam: string | number;
                notNull: false;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            riskFlags: import("drizzle-orm/pg-core").PgColumn<{
                name: "risk_flags";
                tableName: "transactions";
                dataType: "json";
                columnType: "PgJson";
                data: string[];
                driverParam: unknown;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            fraudSignals: import("drizzle-orm/pg-core").PgColumn<{
                name: "fraud_signals";
                tableName: "transactions";
                dataType: "json";
                columnType: "PgJson";
                data: Record<string, any>;
                driverParam: unknown;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            metadata: import("drizzle-orm/pg-core").PgColumn<{
                name: "metadata";
                tableName: "transactions";
                dataType: "json";
                columnType: "PgJson";
                data: Record<string, any>;
                driverParam: unknown;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            processorResponse: import("drizzle-orm/pg-core").PgColumn<{
                name: "processor_response";
                tableName: "transactions";
                dataType: "json";
                columnType: "PgJson";
                data: Record<string, any>;
                driverParam: unknown;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            initiatedAt: import("drizzle-orm/pg-core").PgColumn<{
                name: "initiated_at";
                tableName: "transactions";
                dataType: "date";
                columnType: "PgTimestamp";
                data: Date;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            authorizedAt: import("drizzle-orm/pg-core").PgColumn<{
                name: "authorized_at";
                tableName: "transactions";
                dataType: "date";
                columnType: "PgTimestamp";
                data: Date;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            capturedAt: import("drizzle-orm/pg-core").PgColumn<{
                name: "captured_at";
                tableName: "transactions";
                dataType: "date";
                columnType: "PgTimestamp";
                data: Date;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            failedAt: import("drizzle-orm/pg-core").PgColumn<{
                name: "failed_at";
                tableName: "transactions";
                dataType: "date";
                columnType: "PgTimestamp";
                data: Date;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            createdAt: import("drizzle-orm/pg-core").PgColumn<{
                name: "created_at";
                tableName: "transactions";
                dataType: "date";
                columnType: "PgTimestamp";
                data: Date;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            updatedAt: import("drizzle-orm/pg-core").PgColumn<{
                name: any;
                tableName: "transactions";
                dataType: any;
                columnType: any;
                data: any;
                driverParam: any;
                notNull: any;
                hasDefault: any;
                enumValues: any;
                baseColumn: any;
            }, {}, {}>;
        };
        dialect: "pg";
    }>;
    transactionEvents: import("drizzle-orm/pg-core").PgTableWithColumns<{
        name: "transaction_events";
        schema: undefined;
        columns: {
            id: import("drizzle-orm/pg-core").PgColumn<{
                name: "id";
                tableName: "transaction_events";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            transactionId: import("drizzle-orm/pg-core").PgColumn<{
                name: "transaction_id";
                tableName: "transaction_events";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            eventType: import("drizzle-orm/pg-core").PgColumn<{
                name: "event_type";
                tableName: "transaction_events";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            eventSource: import("drizzle-orm/pg-core").PgColumn<{
                name: "event_source";
                tableName: "transaction_events";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            eventData: import("drizzle-orm/pg-core").PgColumn<{
                name: "event_data";
                tableName: "transaction_events";
                dataType: "json";
                columnType: "PgJson";
                data: Record<string, any>;
                driverParam: unknown;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            processorEventId: import("drizzle-orm/pg-core").PgColumn<{
                name: "processor_event_id";
                tableName: "transaction_events";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            amount: import("drizzle-orm/pg-core").PgColumn<{
                name: "amount";
                tableName: "transaction_events";
                dataType: "string";
                columnType: "PgNumeric";
                data: string;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            currency: import("drizzle-orm/pg-core").PgColumn<{
                name: "currency";
                tableName: "transaction_events";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            success: import("drizzle-orm/pg-core").PgColumn<{
                name: "success";
                tableName: "transaction_events";
                dataType: "boolean";
                columnType: "PgBoolean";
                data: boolean;
                driverParam: boolean;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            errorCode: import("drizzle-orm/pg-core").PgColumn<{
                name: "error_code";
                tableName: "transaction_events";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            errorMessage: import("drizzle-orm/pg-core").PgColumn<{
                name: "error_message";
                tableName: "transaction_events";
                dataType: "string";
                columnType: "PgText";
                data: string;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            createdAt: import("drizzle-orm/pg-core").PgColumn<{
                name: "created_at";
                tableName: "transaction_events";
                dataType: "date";
                columnType: "PgTimestamp";
                data: Date;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
        };
        dialect: "pg";
    }>;
    refunds: import("drizzle-orm/pg-core").PgTableWithColumns<{
        name: "refunds";
        schema: undefined;
        columns: {
            id: import("drizzle-orm/pg-core").PgColumn<{
                name: "id";
                tableName: "refunds";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            transactionId: import("drizzle-orm/pg-core").PgColumn<{
                name: "transaction_id";
                tableName: "refunds";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            externalRefundId: import("drizzle-orm/pg-core").PgColumn<{
                name: "external_refund_id";
                tableName: "refunds";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            amount: import("drizzle-orm/pg-core").PgColumn<{
                name: "amount";
                tableName: "refunds";
                dataType: "string";
                columnType: "PgNumeric";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            currency: import("drizzle-orm/pg-core").PgColumn<{
                name: "currency";
                tableName: "refunds";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            reason: import("drizzle-orm/pg-core").PgColumn<{
                name: "reason";
                tableName: "refunds";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            reasonDetails: import("drizzle-orm/pg-core").PgColumn<{
                name: "reason_details";
                tableName: "refunds";
                dataType: "string";
                columnType: "PgText";
                data: string;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            origin: import("drizzle-orm/pg-core").PgColumn<{
                name: "origin";
                tableName: "refunds";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            status: import("drizzle-orm/pg-core").PgColumn<{
                name: "status";
                tableName: "refunds";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            trustVerificationId: import("drizzle-orm/pg-core").PgColumn<{
                name: "trust_verification_id";
                tableName: "refunds";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            trustScore: import("drizzle-orm/pg-core").PgColumn<{
                name: "trust_score";
                tableName: "refunds";
                dataType: "number";
                columnType: "PgInteger";
                data: number;
                driverParam: string | number;
                notNull: false;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            requestedBy: import("drizzle-orm/pg-core").PgColumn<{
                name: "requested_by";
                tableName: "refunds";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            reviewedBy: import("drizzle-orm/pg-core").PgColumn<{
                name: "reviewed_by";
                tableName: "refunds";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            approvedBy: import("drizzle-orm/pg-core").PgColumn<{
                name: "approved_by";
                tableName: "refunds";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            decisionReason: import("drizzle-orm/pg-core").PgColumn<{
                name: "decision_reason";
                tableName: "refunds";
                dataType: "string";
                columnType: "PgText";
                data: string;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            evidence: import("drizzle-orm/pg-core").PgColumn<{
                name: "evidence";
                tableName: "refunds";
                dataType: "json";
                columnType: "PgJson";
                data: {
                    contentAccessed?: boolean;
                    accessDuration?: number;
                    deviceFingerprint?: string;
                    ipAddress?: string;
                    screenshots?: string[];
                    supportingDocs?: string[];
                };
                driverParam: unknown;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            creatorNotified: import("drizzle-orm/pg-core").PgColumn<{
                name: "creator_notified";
                tableName: "refunds";
                dataType: "boolean";
                columnType: "PgBoolean";
                data: boolean;
                driverParam: boolean;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            creatorResponse: import("drizzle-orm/pg-core").PgColumn<{
                name: "creator_response";
                tableName: "refunds";
                dataType: "json";
                columnType: "PgJson";
                data: Record<string, any>;
                driverParam: unknown;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            processorResponse: import("drizzle-orm/pg-core").PgColumn<{
                name: "processor_response";
                tableName: "refunds";
                dataType: "json";
                columnType: "PgJson";
                data: Record<string, any>;
                driverParam: unknown;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            ledgerEntryId: import("drizzle-orm/pg-core").PgColumn<{
                name: "ledger_entry_id";
                tableName: "refunds";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            requestedAt: import("drizzle-orm/pg-core").PgColumn<{
                name: "requested_at";
                tableName: "refunds";
                dataType: "date";
                columnType: "PgTimestamp";
                data: Date;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            reviewedAt: import("drizzle-orm/pg-core").PgColumn<{
                name: "reviewed_at";
                tableName: "refunds";
                dataType: "date";
                columnType: "PgTimestamp";
                data: Date;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            approvedAt: import("drizzle-orm/pg-core").PgColumn<{
                name: "approved_at";
                tableName: "refunds";
                dataType: "date";
                columnType: "PgTimestamp";
                data: Date;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            processedAt: import("drizzle-orm/pg-core").PgColumn<{
                name: "processed_at";
                tableName: "refunds";
                dataType: "date";
                columnType: "PgTimestamp";
                data: Date;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            createdAt: import("drizzle-orm/pg-core").PgColumn<{
                name: "created_at";
                tableName: "refunds";
                dataType: "date";
                columnType: "PgTimestamp";
                data: Date;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            updatedAt: import("drizzle-orm/pg-core").PgColumn<{
                name: any;
                tableName: "refunds";
                dataType: any;
                columnType: any;
                data: any;
                driverParam: any;
                notNull: any;
                hasDefault: any;
                enumValues: any;
                baseColumn: any;
            }, {}, {}>;
        };
        dialect: "pg";
    }>;
    disputes: import("drizzle-orm/pg-core").PgTableWithColumns<{
        name: "disputes";
        schema: undefined;
        columns: {
            id: import("drizzle-orm/pg-core").PgColumn<{
                name: "id";
                tableName: "disputes";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            transactionId: import("drizzle-orm/pg-core").PgColumn<{
                name: "transaction_id";
                tableName: "disputes";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            externalDisputeId: import("drizzle-orm/pg-core").PgColumn<{
                name: "external_dispute_id";
                tableName: "disputes";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            type: import("drizzle-orm/pg-core").PgColumn<{
                name: "type";
                tableName: "disputes";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            stage: import("drizzle-orm/pg-core").PgColumn<{
                name: "stage";
                tableName: "disputes";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            amount: import("drizzle-orm/pg-core").PgColumn<{
                name: "amount";
                tableName: "disputes";
                dataType: "string";
                columnType: "PgNumeric";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            currency: import("drizzle-orm/pg-core").PgColumn<{
                name: "currency";
                tableName: "disputes";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            reasonCode: import("drizzle-orm/pg-core").PgColumn<{
                name: "reason_code";
                tableName: "disputes";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            reasonDescription: import("drizzle-orm/pg-core").PgColumn<{
                name: "reason_description";
                tableName: "disputes";
                dataType: "string";
                columnType: "PgText";
                data: string;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            status: import("drizzle-orm/pg-core").PgColumn<{
                name: "status";
                tableName: "disputes";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            deadlineAt: import("drizzle-orm/pg-core").PgColumn<{
                name: "deadline_at";
                tableName: "disputes";
                dataType: "date";
                columnType: "PgTimestamp";
                data: Date;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            receivedAt: import("drizzle-orm/pg-core").PgColumn<{
                name: "received_at";
                tableName: "disputes";
                dataType: "date";
                columnType: "PgTimestamp";
                data: Date;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            respondedAt: import("drizzle-orm/pg-core").PgColumn<{
                name: "responded_at";
                tableName: "disputes";
                dataType: "date";
                columnType: "PgTimestamp";
                data: Date;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            resolvedAt: import("drizzle-orm/pg-core").PgColumn<{
                name: "resolved_at";
                tableName: "disputes";
                dataType: "date";
                columnType: "PgTimestamp";
                data: Date;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            responseSubmitted: import("drizzle-orm/pg-core").PgColumn<{
                name: "response_submitted";
                tableName: "disputes";
                dataType: "boolean";
                columnType: "PgBoolean";
                data: boolean;
                driverParam: boolean;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            responseEvidence: import("drizzle-orm/pg-core").PgColumn<{
                name: "response_evidence";
                tableName: "disputes";
                dataType: "json";
                columnType: "PgJson";
                data: {
                    documents?: string[];
                    description?: string;
                    submittedBy?: string;
                };
                driverParam: unknown;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            outcome: import("drizzle-orm/pg-core").PgColumn<{
                name: "outcome";
                tableName: "disputes";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            recoveredAmount: import("drizzle-orm/pg-core").PgColumn<{
                name: "recovered_amount";
                tableName: "disputes";
                dataType: "string";
                columnType: "PgNumeric";
                data: string;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            processorData: import("drizzle-orm/pg-core").PgColumn<{
                name: "processor_data";
                tableName: "disputes";
                dataType: "json";
                columnType: "PgJson";
                data: Record<string, any>;
                driverParam: unknown;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            createdAt: import("drizzle-orm/pg-core").PgColumn<{
                name: "created_at";
                tableName: "disputes";
                dataType: "date";
                columnType: "PgTimestamp";
                data: Date;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            updatedAt: import("drizzle-orm/pg-core").PgColumn<{
                name: any;
                tableName: "disputes";
                dataType: any;
                columnType: any;
                data: any;
                driverParam: any;
                notNull: any;
                hasDefault: any;
                enumValues: any;
                baseColumn: any;
            }, {}, {}>;
        };
        dialect: "pg";
    }>;
    settlements: import("drizzle-orm/pg-core").PgTableWithColumns<{
        name: "settlements";
        schema: undefined;
        columns: {
            id: import("drizzle-orm/pg-core").PgColumn<{
                name: "id";
                tableName: "settlements";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            processorId: import("drizzle-orm/pg-core").PgColumn<{
                name: "processor_id";
                tableName: "settlements";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            batchId: import("drizzle-orm/pg-core").PgColumn<{
                name: "batch_id";
                tableName: "settlements";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            settlementDate: import("drizzle-orm/pg-core").PgColumn<{
                name: "settlement_date";
                tableName: "settlements";
                dataType: "date";
                columnType: "PgTimestamp";
                data: Date;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            currency: import("drizzle-orm/pg-core").PgColumn<{
                name: "currency";
                tableName: "settlements";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            grossAmount: import("drizzle-orm/pg-core").PgColumn<{
                name: "gross_amount";
                tableName: "settlements";
                dataType: "string";
                columnType: "PgNumeric";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            fees: import("drizzle-orm/pg-core").PgColumn<{
                name: "fees";
                tableName: "settlements";
                dataType: "string";
                columnType: "PgNumeric";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            chargebacks: import("drizzle-orm/pg-core").PgColumn<{
                name: "chargebacks";
                tableName: "settlements";
                dataType: "string";
                columnType: "PgNumeric";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            refunds: import("drizzle-orm/pg-core").PgColumn<{
                name: "refunds";
                tableName: "settlements";
                dataType: "string";
                columnType: "PgNumeric";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            netAmount: import("drizzle-orm/pg-core").PgColumn<{
                name: "net_amount";
                tableName: "settlements";
                dataType: "string";
                columnType: "PgNumeric";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            transactionCount: import("drizzle-orm/pg-core").PgColumn<{
                name: "transaction_count";
                tableName: "settlements";
                dataType: "number";
                columnType: "PgInteger";
                data: number;
                driverParam: string | number;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            fileUrl: import("drizzle-orm/pg-core").PgColumn<{
                name: "file_url";
                tableName: "settlements";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            fileHash: import("drizzle-orm/pg-core").PgColumn<{
                name: "file_hash";
                tableName: "settlements";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            status: import("drizzle-orm/pg-core").PgColumn<{
                name: "status";
                tableName: "settlements";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            reconciledAt: import("drizzle-orm/pg-core").PgColumn<{
                name: "reconciled_at";
                tableName: "settlements";
                dataType: "date";
                columnType: "PgTimestamp";
                data: Date;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            reconciledBy: import("drizzle-orm/pg-core").PgColumn<{
                name: "reconciled_by";
                tableName: "settlements";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            discrepancies: import("drizzle-orm/pg-core").PgColumn<{
                name: "discrepancies";
                tableName: "settlements";
                dataType: "json";
                columnType: "PgJson";
                data: {
                    missingTransactions?: string[];
                    amountMismatches?: {
                        transactionId: string;
                        expected: number;
                        actual: number;
                    }[];
                    unexpectedTransactions?: string[];
                };
                driverParam: unknown;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            ledgerEntryId: import("drizzle-orm/pg-core").PgColumn<{
                name: "ledger_entry_id";
                tableName: "settlements";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            createdAt: import("drizzle-orm/pg-core").PgColumn<{
                name: "created_at";
                tableName: "settlements";
                dataType: "date";
                columnType: "PgTimestamp";
                data: Date;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            updatedAt: import("drizzle-orm/pg-core").PgColumn<{
                name: any;
                tableName: "settlements";
                dataType: any;
                columnType: any;
                data: any;
                driverParam: any;
                notNull: any;
                hasDefault: any;
                enumValues: any;
                baseColumn: any;
            }, {}, {}>;
        };
        dialect: "pg";
    }>;
    payoutMethods: import("drizzle-orm/pg-core").PgTableWithColumns<{
        name: "payout_methods";
        schema: undefined;
        columns: {
            id: import("drizzle-orm/pg-core").PgColumn<{
                name: "id";
                tableName: "payout_methods";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            name: import("drizzle-orm/pg-core").PgColumn<{
                name: "name";
                tableName: "payout_methods";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            displayName: import("drizzle-orm/pg-core").PgColumn<{
                name: "display_name";
                tableName: "payout_methods";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            type: import("drizzle-orm/pg-core").PgColumn<{
                name: "type";
                tableName: "payout_methods";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            rails: import("drizzle-orm/pg-core").PgColumn<{
                name: "rails";
                tableName: "payout_methods";
                dataType: "json";
                columnType: "PgJson";
                data: string[];
                driverParam: unknown;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            currencies: import("drizzle-orm/pg-core").PgColumn<{
                name: "currencies";
                tableName: "payout_methods";
                dataType: "json";
                columnType: "PgJson";
                data: string[];
                driverParam: unknown;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            regions: import("drizzle-orm/pg-core").PgColumn<{
                name: "regions";
                tableName: "payout_methods";
                dataType: "json";
                columnType: "PgJson";
                data: string[];
                driverParam: unknown;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            fees: import("drizzle-orm/pg-core").PgColumn<{
                name: "fees";
                tableName: "payout_methods";
                dataType: "json";
                columnType: "PgJson";
                data: {
                    fixedFee?: number;
                    percentageFee?: number;
                    currency?: string;
                    minimumFee?: number;
                    maximumFee?: number;
                };
                driverParam: unknown;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            limits: import("drizzle-orm/pg-core").PgColumn<{
                name: "limits";
                tableName: "payout_methods";
                dataType: "json";
                columnType: "PgJson";
                data: {
                    minAmount?: number;
                    maxAmount?: number;
                    dailyLimit?: number;
                    monthlyLimit?: number;
                };
                driverParam: unknown;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            processingTime: import("drizzle-orm/pg-core").PgColumn<{
                name: "processing_time";
                tableName: "payout_methods";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            requirements: import("drizzle-orm/pg-core").PgColumn<{
                name: "requirements";
                tableName: "payout_methods";
                dataType: "json";
                columnType: "PgJson";
                data: {
                    kyc?: boolean;
                    bankAccount?: boolean;
                    taxId?: boolean;
                    address?: boolean;
                };
                driverParam: unknown;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            isActive: import("drizzle-orm/pg-core").PgColumn<{
                name: "is_active";
                tableName: "payout_methods";
                dataType: "boolean";
                columnType: "PgBoolean";
                data: boolean;
                driverParam: boolean;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            createdAt: import("drizzle-orm/pg-core").PgColumn<{
                name: "created_at";
                tableName: "payout_methods";
                dataType: "date";
                columnType: "PgTimestamp";
                data: Date;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            updatedAt: import("drizzle-orm/pg-core").PgColumn<{
                name: any;
                tableName: "payout_methods";
                dataType: any;
                columnType: any;
                data: any;
                driverParam: any;
                notNull: any;
                hasDefault: any;
                enumValues: any;
                baseColumn: any;
            }, {}, {}>;
        };
        dialect: "pg";
    }>;
    payouts: import("drizzle-orm/pg-core").PgTableWithColumns<{
        name: "payouts";
        schema: undefined;
        columns: {
            id: import("drizzle-orm/pg-core").PgColumn<{
                name: "id";
                tableName: "payouts";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            creatorId: import("drizzle-orm/pg-core").PgColumn<{
                name: "creator_id";
                tableName: "payouts";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            batchId: import("drizzle-orm/pg-core").PgColumn<{
                name: "batch_id";
                tableName: "payouts";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            payoutMethodId: import("drizzle-orm/pg-core").PgColumn<{
                name: "payout_method_id";
                tableName: "payouts";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            amount: import("drizzle-orm/pg-core").PgColumn<{
                name: "amount";
                tableName: "payouts";
                dataType: "string";
                columnType: "PgNumeric";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            currency: import("drizzle-orm/pg-core").PgColumn<{
                name: "currency";
                tableName: "payouts";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            fees: import("drizzle-orm/pg-core").PgColumn<{
                name: "fees";
                tableName: "payouts";
                dataType: "string";
                columnType: "PgNumeric";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            netAmount: import("drizzle-orm/pg-core").PgColumn<{
                name: "net_amount";
                tableName: "payouts";
                dataType: "string";
                columnType: "PgNumeric";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            status: import("drizzle-orm/pg-core").PgColumn<{
                name: "status";
                tableName: "payouts";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            externalPayoutId: import("drizzle-orm/pg-core").PgColumn<{
                name: "external_payout_id";
                tableName: "payouts";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            failureReason: import("drizzle-orm/pg-core").PgColumn<{
                name: "failure_reason";
                tableName: "payouts";
                dataType: "string";
                columnType: "PgText";
                data: string;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            creatorPayoutInfo: import("drizzle-orm/pg-core").PgColumn<{
                name: "creator_payout_info";
                tableName: "payouts";
                dataType: "json";
                columnType: "PgJson";
                data: {
                    email?: string;
                    bankAccount?: string;
                    walletAddress?: string;
                    recipientName?: string;
                    metadata?: Record<string, any>;
                };
                driverParam: unknown;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            requestedBy: import("drizzle-orm/pg-core").PgColumn<{
                name: "requested_by";
                tableName: "payouts";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            approvedBy: import("drizzle-orm/pg-core").PgColumn<{
                name: "approved_by";
                tableName: "payouts";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            approvedAt: import("drizzle-orm/pg-core").PgColumn<{
                name: "approved_at";
                tableName: "payouts";
                dataType: "date";
                columnType: "PgTimestamp";
                data: Date;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            processorResponse: import("drizzle-orm/pg-core").PgColumn<{
                name: "processor_response";
                tableName: "payouts";
                dataType: "json";
                columnType: "PgJson";
                data: Record<string, any>;
                driverParam: unknown;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            taxWithholding: import("drizzle-orm/pg-core").PgColumn<{
                name: "tax_withholding";
                tableName: "payouts";
                dataType: "string";
                columnType: "PgNumeric";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            taxYear: import("drizzle-orm/pg-core").PgColumn<{
                name: "tax_year";
                tableName: "payouts";
                dataType: "number";
                columnType: "PgInteger";
                data: number;
                driverParam: string | number;
                notNull: false;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            form1099Generated: import("drizzle-orm/pg-core").PgColumn<{
                name: "form_1099_generated";
                tableName: "payouts";
                dataType: "boolean";
                columnType: "PgBoolean";
                data: boolean;
                driverParam: boolean;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            ledgerEntryId: import("drizzle-orm/pg-core").PgColumn<{
                name: "ledger_entry_id";
                tableName: "payouts";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            requestedAt: import("drizzle-orm/pg-core").PgColumn<{
                name: "requested_at";
                tableName: "payouts";
                dataType: "date";
                columnType: "PgTimestamp";
                data: Date;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            sentAt: import("drizzle-orm/pg-core").PgColumn<{
                name: "sent_at";
                tableName: "payouts";
                dataType: "date";
                columnType: "PgTimestamp";
                data: Date;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            completedAt: import("drizzle-orm/pg-core").PgColumn<{
                name: "completed_at";
                tableName: "payouts";
                dataType: "date";
                columnType: "PgTimestamp";
                data: Date;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            createdAt: import("drizzle-orm/pg-core").PgColumn<{
                name: "created_at";
                tableName: "payouts";
                dataType: "date";
                columnType: "PgTimestamp";
                data: Date;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            updatedAt: import("drizzle-orm/pg-core").PgColumn<{
                name: any;
                tableName: "payouts";
                dataType: any;
                columnType: any;
                data: any;
                driverParam: any;
                notNull: any;
                hasDefault: any;
                enumValues: any;
                baseColumn: any;
            }, {}, {}>;
        };
        dialect: "pg";
    }>;
    payoutBatches: import("drizzle-orm/pg-core").PgTableWithColumns<{
        name: "payout_batches";
        schema: undefined;
        columns: {
            id: import("drizzle-orm/pg-core").PgColumn<{
                name: "id";
                tableName: "payout_batches";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            batchNumber: import("drizzle-orm/pg-core").PgColumn<{
                name: "batch_number";
                tableName: "payout_batches";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            payoutMethodId: import("drizzle-orm/pg-core").PgColumn<{
                name: "payout_method_id";
                tableName: "payout_batches";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            payoutCount: import("drizzle-orm/pg-core").PgColumn<{
                name: "payout_count";
                tableName: "payout_batches";
                dataType: "number";
                columnType: "PgInteger";
                data: number;
                driverParam: string | number;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            totalAmount: import("drizzle-orm/pg-core").PgColumn<{
                name: "total_amount";
                tableName: "payout_batches";
                dataType: "string";
                columnType: "PgNumeric";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            totalFees: import("drizzle-orm/pg-core").PgColumn<{
                name: "total_fees";
                tableName: "payout_batches";
                dataType: "string";
                columnType: "PgNumeric";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            netAmount: import("drizzle-orm/pg-core").PgColumn<{
                name: "net_amount";
                tableName: "payout_batches";
                dataType: "string";
                columnType: "PgNumeric";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            currency: import("drizzle-orm/pg-core").PgColumn<{
                name: "currency";
                tableName: "payout_batches";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            status: import("drizzle-orm/pg-core").PgColumn<{
                name: "status";
                tableName: "payout_batches";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            fileUrl: import("drizzle-orm/pg-core").PgColumn<{
                name: "file_url";
                tableName: "payout_batches";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            externalBatchId: import("drizzle-orm/pg-core").PgColumn<{
                name: "external_batch_id";
                tableName: "payout_batches";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            createdBy: import("drizzle-orm/pg-core").PgColumn<{
                name: "created_by";
                tableName: "payout_batches";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            approvedBy: import("drizzle-orm/pg-core").PgColumn<{
                name: "approved_by";
                tableName: "payout_batches";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            approvedAt: import("drizzle-orm/pg-core").PgColumn<{
                name: "approved_at";
                tableName: "payout_batches";
                dataType: "date";
                columnType: "PgTimestamp";
                data: Date;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            submittedAt: import("drizzle-orm/pg-core").PgColumn<{
                name: "submitted_at";
                tableName: "payout_batches";
                dataType: "date";
                columnType: "PgTimestamp";
                data: Date;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            completedAt: import("drizzle-orm/pg-core").PgColumn<{
                name: "completed_at";
                tableName: "payout_batches";
                dataType: "date";
                columnType: "PgTimestamp";
                data: Date;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            createdAt: import("drizzle-orm/pg-core").PgColumn<{
                name: "created_at";
                tableName: "payout_batches";
                dataType: "date";
                columnType: "PgTimestamp";
                data: Date;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            updatedAt: import("drizzle-orm/pg-core").PgColumn<{
                name: any;
                tableName: "payout_batches";
                dataType: any;
                columnType: any;
                data: any;
                driverParam: any;
                notNull: any;
                hasDefault: any;
                enumValues: any;
                baseColumn: any;
            }, {}, {}>;
        };
        dialect: "pg";
    }>;
    trustScores: import("drizzle-orm/pg-core").PgTableWithColumns<{
        name: "trust_scores";
        schema: undefined;
        columns: {
            id: import("drizzle-orm/pg-core").PgColumn<{
                name: "id";
                tableName: "trust_scores";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            transactionId: import("drizzle-orm/pg-core").PgColumn<{
                name: "transaction_id";
                tableName: "trust_scores";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            userId: import("drizzle-orm/pg-core").PgColumn<{
                name: "user_id";
                tableName: "trust_scores";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            entityType: import("drizzle-orm/pg-core").PgColumn<{
                name: "entity_type";
                tableName: "trust_scores";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            entityId: import("drizzle-orm/pg-core").PgColumn<{
                name: "entity_id";
                tableName: "trust_scores";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            score: import("drizzle-orm/pg-core").PgColumn<{
                name: "score";
                tableName: "trust_scores";
                dataType: "number";
                columnType: "PgInteger";
                data: number;
                driverParam: string | number;
                notNull: true;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            confidence: import("drizzle-orm/pg-core").PgColumn<{
                name: "confidence";
                tableName: "trust_scores";
                dataType: "number";
                columnType: "PgInteger";
                data: number;
                driverParam: string | number;
                notNull: true;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            modelVersion: import("drizzle-orm/pg-core").PgColumn<{
                name: "model_version";
                tableName: "trust_scores";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            decision: import("drizzle-orm/pg-core").PgColumn<{
                name: "decision";
                tableName: "trust_scores";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            reasonCodes: import("drizzle-orm/pg-core").PgColumn<{
                name: "reason_codes";
                tableName: "trust_scores";
                dataType: "json";
                columnType: "PgJson";
                data: string[];
                driverParam: unknown;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            signals: import("drizzle-orm/pg-core").PgColumn<{
                name: "signals";
                tableName: "trust_scores";
                dataType: "json";
                columnType: "PgJson";
                data: {
                    device?: {
                        fingerprint?: string;
                        reputation?: number;
                        velocity?: number;
                        newDevice?: boolean;
                    };
                    network?: {
                        ipReputation?: number;
                        geoVelocity?: number;
                        torVpn?: boolean;
                        suspiciousIsp?: boolean;
                    };
                    payment?: {
                        avsResult?: string;
                        cvvResult?: string;
                        binCountry?: string;
                        issuerType?: string;
                        prepaidCard?: boolean;
                    };
                    behavioral?: {
                        accountAge?: number;
                        spendingPattern?: number;
                        refundHistory?: number;
                        velocityScore?: number;
                    };
                    platform?: {
                        riskLevel?: string;
                        contentType?: string;
                        creatorTier?: string;
                    };
                };
                driverParam: unknown;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            explanation: import("drizzle-orm/pg-core").PgColumn<{
                name: "explanation";
                tableName: "trust_scores";
                dataType: "json";
                columnType: "PgJson";
                data: {
                    primaryFactors?: string[];
                    riskFactors?: string[];
                    protectiveFactors?: string[];
                    recommendations?: string[];
                };
                driverParam: unknown;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            processingTimeMs: import("drizzle-orm/pg-core").PgColumn<{
                name: "processing_time_ms";
                tableName: "trust_scores";
                dataType: "number";
                columnType: "PgInteger";
                data: number;
                driverParam: string | number;
                notNull: false;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            createdAt: import("drizzle-orm/pg-core").PgColumn<{
                name: "created_at";
                tableName: "trust_scores";
                dataType: "date";
                columnType: "PgTimestamp";
                data: Date;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
        };
        dialect: "pg";
    }>;
    approvals: import("drizzle-orm/pg-core").PgTableWithColumns<{
        name: "approvals";
        schema: undefined;
        columns: {
            id: import("drizzle-orm/pg-core").PgColumn<{
                name: "id";
                tableName: "approvals";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            entityType: import("drizzle-orm/pg-core").PgColumn<{
                name: "entity_type";
                tableName: "approvals";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            entityId: import("drizzle-orm/pg-core").PgColumn<{
                name: "entity_id";
                tableName: "approvals";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            approvalType: import("drizzle-orm/pg-core").PgColumn<{
                name: "approval_type";
                tableName: "approvals";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            state: import("drizzle-orm/pg-core").PgColumn<{
                name: "state";
                tableName: "approvals";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            priority: import("drizzle-orm/pg-core").PgColumn<{
                name: "priority";
                tableName: "approvals";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            assigneeId: import("drizzle-orm/pg-core").PgColumn<{
                name: "assignee_id";
                tableName: "approvals";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            assignedTeam: import("drizzle-orm/pg-core").PgColumn<{
                name: "assigned_team";
                tableName: "approvals";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            slaMinutes: import("drizzle-orm/pg-core").PgColumn<{
                name: "sla_minutes";
                tableName: "approvals";
                dataType: "number";
                columnType: "PgInteger";
                data: number;
                driverParam: string | number;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            slaAt: import("drizzle-orm/pg-core").PgColumn<{
                name: "sla_at";
                tableName: "approvals";
                dataType: "date";
                columnType: "PgTimestamp";
                data: Date;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            escalatedAt: import("drizzle-orm/pg-core").PgColumn<{
                name: "escalated_at";
                tableName: "approvals";
                dataType: "date";
                columnType: "PgTimestamp";
                data: Date;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            requestedBy: import("drizzle-orm/pg-core").PgColumn<{
                name: "requested_by";
                tableName: "approvals";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            requestReason: import("drizzle-orm/pg-core").PgColumn<{
                name: "request_reason";
                tableName: "approvals";
                dataType: "string";
                columnType: "PgText";
                data: string;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            requestData: import("drizzle-orm/pg-core").PgColumn<{
                name: "request_data";
                tableName: "approvals";
                dataType: "json";
                columnType: "PgJson";
                data: Record<string, any>;
                driverParam: unknown;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            decidedBy: import("drizzle-orm/pg-core").PgColumn<{
                name: "decided_by";
                tableName: "approvals";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            decidedAt: import("drizzle-orm/pg-core").PgColumn<{
                name: "decided_at";
                tableName: "approvals";
                dataType: "date";
                columnType: "PgTimestamp";
                data: Date;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            decision: import("drizzle-orm/pg-core").PgColumn<{
                name: "decision";
                tableName: "approvals";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            decisionReason: import("drizzle-orm/pg-core").PgColumn<{
                name: "decision_reason";
                tableName: "approvals";
                dataType: "string";
                columnType: "PgText";
                data: string;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            decisionData: import("drizzle-orm/pg-core").PgColumn<{
                name: "decision_data";
                tableName: "approvals";
                dataType: "json";
                columnType: "PgJson";
                data: Record<string, any>;
                driverParam: unknown;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            history: import("drizzle-orm/pg-core").PgColumn<{
                name: "history";
                tableName: "approvals";
                dataType: "json";
                columnType: "PgJson";
                data: {
                    timestamp: string;
                    action: string;
                    actor: string;
                    details?: Record<string, any>;
                }[];
                driverParam: unknown;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            notificationsSent: import("drizzle-orm/pg-core").PgColumn<{
                name: "notifications_sent";
                tableName: "approvals";
                dataType: "json";
                columnType: "PgJson";
                data: {
                    timestamp: string;
                    type: string;
                    recipient: string;
                    success: boolean;
                }[];
                driverParam: unknown;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            createdAt: import("drizzle-orm/pg-core").PgColumn<{
                name: "created_at";
                tableName: "approvals";
                dataType: "date";
                columnType: "PgTimestamp";
                data: Date;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            updatedAt: import("drizzle-orm/pg-core").PgColumn<{
                name: any;
                tableName: "approvals";
                dataType: any;
                columnType: any;
                data: any;
                driverParam: any;
                notNull: any;
                hasDefault: any;
                enumValues: any;
                baseColumn: any;
            }, {}, {}>;
        };
        dialect: "pg";
    }>;
    financialAuditTrail: import("drizzle-orm/pg-core").PgTableWithColumns<{
        name: "financial_audit_trail";
        schema: undefined;
        columns: {
            id: import("drizzle-orm/pg-core").PgColumn<{
                name: "id";
                tableName: "financial_audit_trail";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            actorType: import("drizzle-orm/pg-core").PgColumn<{
                name: "actor_type";
                tableName: "financial_audit_trail";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            actorId: import("drizzle-orm/pg-core").PgColumn<{
                name: "actor_id";
                tableName: "financial_audit_trail";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            actorName: import("drizzle-orm/pg-core").PgColumn<{
                name: "actor_name";
                tableName: "financial_audit_trail";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            action: import("drizzle-orm/pg-core").PgColumn<{
                name: "action";
                tableName: "financial_audit_trail";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            category: import("drizzle-orm/pg-core").PgColumn<{
                name: "category";
                tableName: "financial_audit_trail";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            entityType: import("drizzle-orm/pg-core").PgColumn<{
                name: "entity_type";
                tableName: "financial_audit_trail";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            entityId: import("drizzle-orm/pg-core").PgColumn<{
                name: "entity_id";
                tableName: "financial_audit_trail";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            beforeState: import("drizzle-orm/pg-core").PgColumn<{
                name: "before_state";
                tableName: "financial_audit_trail";
                dataType: "json";
                columnType: "PgJson";
                data: Record<string, any>;
                driverParam: unknown;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            afterState: import("drizzle-orm/pg-core").PgColumn<{
                name: "after_state";
                tableName: "financial_audit_trail";
                dataType: "json";
                columnType: "PgJson";
                data: Record<string, any>;
                driverParam: unknown;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            platformId: import("drizzle-orm/pg-core").PgColumn<{
                name: "platform_id";
                tableName: "financial_audit_trail";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            sessionId: import("drizzle-orm/pg-core").PgColumn<{
                name: "session_id";
                tableName: "financial_audit_trail";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            requestId: import("drizzle-orm/pg-core").PgColumn<{
                name: "request_id";
                tableName: "financial_audit_trail";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            ipAddress: import("drizzle-orm/pg-core").PgColumn<{
                name: "ip_address";
                tableName: "financial_audit_trail";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            userAgent: import("drizzle-orm/pg-core").PgColumn<{
                name: "user_agent";
                tableName: "financial_audit_trail";
                dataType: "string";
                columnType: "PgText";
                data: string;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            geoLocation: import("drizzle-orm/pg-core").PgColumn<{
                name: "geo_location";
                tableName: "financial_audit_trail";
                dataType: "json";
                columnType: "PgJson";
                data: {
                    country?: string;
                    region?: string;
                    city?: string;
                    latitude?: number;
                    longitude?: number;
                };
                driverParam: unknown;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            riskLevel: import("drizzle-orm/pg-core").PgColumn<{
                name: "risk_level";
                tableName: "financial_audit_trail";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            complianceFlags: import("drizzle-orm/pg-core").PgColumn<{
                name: "compliance_flags";
                tableName: "financial_audit_trail";
                dataType: "json";
                columnType: "PgJson";
                data: string[];
                driverParam: unknown;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            metadata: import("drizzle-orm/pg-core").PgColumn<{
                name: "metadata";
                tableName: "financial_audit_trail";
                dataType: "json";
                columnType: "PgJson";
                data: Record<string, any>;
                driverParam: unknown;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            createdAt: import("drizzle-orm/pg-core").PgColumn<{
                name: "created_at";
                tableName: "financial_audit_trail";
                dataType: "date";
                columnType: "PgTimestamp";
                data: Date;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
        };
        dialect: "pg";
    }>;
    financialProducts: import("drizzle-orm/pg-core").PgTableWithColumns<{
        name: "financial_products";
        schema: undefined;
        columns: {
            id: import("drizzle-orm/pg-core").PgColumn<{
                name: "id";
                tableName: "financial_products";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            productType: import("drizzle-orm/pg-core").PgColumn<{
                name: "product_type";
                tableName: "financial_products";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            productName: import("drizzle-orm/pg-core").PgColumn<{
                name: "product_name";
                tableName: "financial_products";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            displayName: import("drizzle-orm/pg-core").PgColumn<{
                name: "display_name";
                tableName: "financial_products";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            description: import("drizzle-orm/pg-core").PgColumn<{
                name: "description";
                tableName: "financial_products";
                dataType: "string";
                columnType: "PgText";
                data: string;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            configuration: import("drizzle-orm/pg-core").PgColumn<{
                name: "configuration";
                tableName: "financial_products";
                dataType: "json";
                columnType: "PgJson";
                data: Record<string, any>;
                driverParam: unknown;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            enabledPlatforms: import("drizzle-orm/pg-core").PgColumn<{
                name: "enabled_platforms";
                tableName: "financial_products";
                dataType: "json";
                columnType: "PgJson";
                data: string[];
                driverParam: unknown;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            regionAvailability: import("drizzle-orm/pg-core").PgColumn<{
                name: "region_availability";
                tableName: "financial_products";
                dataType: "json";
                columnType: "PgJson";
                data: string[];
                driverParam: unknown;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            isActive: import("drizzle-orm/pg-core").PgColumn<{
                name: "is_active";
                tableName: "financial_products";
                dataType: "boolean";
                columnType: "PgBoolean";
                data: boolean;
                driverParam: boolean;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            isBeta: import("drizzle-orm/pg-core").PgColumn<{
                name: "is_beta";
                tableName: "financial_products";
                dataType: "boolean";
                columnType: "PgBoolean";
                data: boolean;
                driverParam: boolean;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            rolloutPercentage: import("drizzle-orm/pg-core").PgColumn<{
                name: "rollout_percentage";
                tableName: "financial_products";
                dataType: "number";
                columnType: "PgInteger";
                data: number;
                driverParam: string | number;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            limits: import("drizzle-orm/pg-core").PgColumn<{
                name: "limits";
                tableName: "financial_products";
                dataType: "json";
                columnType: "PgJson";
                data: Record<string, any>;
                driverParam: unknown;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            rules: import("drizzle-orm/pg-core").PgColumn<{
                name: "rules";
                tableName: "financial_products";
                dataType: "json";
                columnType: "PgJson";
                data: Record<string, any>;
                driverParam: unknown;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            createdAt: import("drizzle-orm/pg-core").PgColumn<{
                name: "created_at";
                tableName: "financial_products";
                dataType: "date";
                columnType: "PgTimestamp";
                data: Date;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            updatedAt: import("drizzle-orm/pg-core").PgColumn<{
                name: any;
                tableName: "financial_products";
                dataType: any;
                columnType: any;
                data: any;
                driverParam: any;
                notNull: any;
                hasDefault: any;
                enumValues: any;
                baseColumn: any;
            }, {}, {}>;
        };
        dialect: "pg";
    }>;
};
export type PaymentProcessor = typeof paymentProcessors.$inferSelect;
export type NewPaymentProcessor = typeof paymentProcessors.$inferInsert;
export type MerchantAccount = typeof merchantAccounts.$inferSelect;
export type NewMerchantAccount = typeof merchantAccounts.$inferInsert;
export type Transaction = typeof transactions.$inferSelect;
export type NewTransaction = typeof transactions.$inferInsert;
export type Refund = typeof refunds.$inferSelect;
export type NewRefund = typeof refunds.$inferInsert;
export type TrustScore = typeof trustScores.$inferSelect;
export type NewTrustScore = typeof trustScores.$inferInsert;
export type Approval = typeof approvals.$inferSelect;
export type NewApproval = typeof approvals.$inferInsert;
export type FinancialAuditEntry = typeof financialAuditTrail.$inferSelect;
export type NewFinancialAuditEntry = typeof financialAuditTrail.$inferInsert;
//# sourceMappingURL=financial-schema.d.ts.map