version: '3.8'

services:
  # FANZ MoneyDash Application
  app:
    build:
      context: ..
      dockerfile: deploy/Dockerfile.production
    container_name: fanz-money-dash-app
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=3001
      - MONGODB_URI=${MONGODB_URI}
      - REDIS_URL=${REDIS_URL}
      - JWT_SECRET=${JWT_SECRET}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - CCBILL_CLIENT_ID=${CCBILL_CLIENT_ID}
      - SEGPAY_CLIENT_ID=${SEGPAY_CLIENT_ID}
      - ETHEREUM_RPC_URL=${ETHEREUM_RPC_URL}
      - CLOUDFLARE_R2_ACCESS_KEY=${CLOUDFLARE_R2_ACCESS_KEY}
      - CLOUDFLARE_R2_SECRET_KEY=${CLOUDFLARE_R2_SECRET_KEY}
      - BUNNY_CDN_API_KEY=${BUNNY_CDN_API_KEY}
    networks:
      - fanz-network
    depends_on:
      - mongodb
      - redis
    volumes:
      - app-logs:/app/logs
      - app-uploads:/app/uploads
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.fanz-app.rule=Host(`money.fanz.network`)"
      - "traefik.http.routers.fanz-app.tls=true"
      - "traefik.http.routers.fanz-app.tls.certresolver=letsencrypt"

  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: fanz-mongodb
    restart: unless-stopped
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGODB_ROOT_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGODB_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=fanz_money_dash
    volumes:
      - mongodb-data:/data/db
      - ./mongodb/init:/docker-entrypoint-initdb.d
    networks:
      - fanz-network
    ports:
      - "27017:27017"
    command: --auth --bind_ip_all

  # Redis Cache & Sessions
  redis:
    image: redis:7.2-alpine
    container_name: fanz-redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis-data:/data
    networks:
      - fanz-network
    ports:
      - "6379:6379"

  # Reverse Proxy & Load Balancer
  traefik:
    image: traefik:v3.0
    container_name: fanz-traefik
    restart: unless-stopped
    command:
      - "--api.dashboard=true"
      - "--api.insecure=false"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.letsencrypt.acme.email=admin@fanz.network"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
      - "--global.checknewversion=false"
      - "--global.sendanonymoususage=false"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik-certs:/letsencrypt
    networks:
      - fanz-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.fanz.network`)"
      - "traefik.http.routers.traefik.tls=true"
      - "traefik.http.routers.traefik.tls.certresolver=letsencrypt"
      - "traefik.http.routers.traefik.service=api@internal"

  # Monitoring & Health Checks
  watchtower:
    image: containrrr/watchtower:latest
    container_name: fanz-watchtower
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_POLL_INTERVAL=300
      - WATCHTOWER_INCLUDE_RESTARTING=true
    networks:
      - fanz-network

networks:
  fanz-network:
    driver: bridge

volumes:
  mongodb-data:
    driver: local
  redis-data:
    driver: local
  app-logs:
    driver: local
  app-uploads:
    driver: local
  traefik-certs:
    driver: local